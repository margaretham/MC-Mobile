// Generated by view binder compiler. Do not edit!
package com.capstone.maternalcare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.capstone.maternalcare.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRowHistoryBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView dateEnd;

  @NonNull
  public final TextView dateStart;

  @NonNull
  public final TextView historyText;

  @NonNull
  public final TextView historyTitle;

  @NonNull
  public final ImageView newsImage;

  private ItemRowHistoryBinding(@NonNull MaterialCardView rootView, @NonNull TextView dateEnd,
      @NonNull TextView dateStart, @NonNull TextView historyText, @NonNull TextView historyTitle,
      @NonNull ImageView newsImage) {
    this.rootView = rootView;
    this.dateEnd = dateEnd;
    this.dateStart = dateStart;
    this.historyText = historyText;
    this.historyTitle = historyTitle;
    this.newsImage = newsImage;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRowHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRowHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_row_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRowHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.date_end;
      TextView dateEnd = ViewBindings.findChildViewById(rootView, id);
      if (dateEnd == null) {
        break missingId;
      }

      id = R.id.date_start;
      TextView dateStart = ViewBindings.findChildViewById(rootView, id);
      if (dateStart == null) {
        break missingId;
      }

      id = R.id.history_text;
      TextView historyText = ViewBindings.findChildViewById(rootView, id);
      if (historyText == null) {
        break missingId;
      }

      id = R.id.history_title;
      TextView historyTitle = ViewBindings.findChildViewById(rootView, id);
      if (historyTitle == null) {
        break missingId;
      }

      id = R.id.news_image;
      ImageView newsImage = ViewBindings.findChildViewById(rootView, id);
      if (newsImage == null) {
        break missingId;
      }

      return new ItemRowHistoryBinding((MaterialCardView) rootView, dateEnd, dateStart, historyText,
          historyTitle, newsImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
